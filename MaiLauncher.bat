@echo off
@setlocal enabledelayedexpansion
@chcp 936

@REM …Ë÷√∞Ê±æ∫≈
set "VERSION=1.0"

title ¬Û¬ÛBotøÿ÷∆Ã® v%VERSION%

@REM …Ë÷√Python∫ÕGitª∑æ≥±‰¡ø
set "_root=%~dp0"
set "_root=%_root:~0,-1%"
cd "%_root%"


:search_python
cls
if exist "%_root%\python" (
    set "PYTHON_HOME=%_root%\python"
) else if exist "%_root%\venv" (
    call "%_root%\venv\Scripts\activate.bat"
    set "PYTHON_HOME=%_root%\venv\Scripts"
) else (
    echo ’˝‘⁄◊‘∂Ø≤È’“PythonΩ‚ Õ∆˜...

    where python >nul 2>&1
    if %errorlevel% equ 0 (
        for /f "delims=" %%i in ('where python') do (
            echo %%i | findstr /i /c:"!LocalAppData!\Microsoft\WindowsApps\python.exe" >nul
            if errorlevel 1 (
                echo ’“µΩPythonΩ‚ Õ∆˜£∫%%i
                set "py_path=%%i"
                goto :validate_python
            )
        )
    )
    set "search_paths=%ProgramFiles%\Git*;!LocalAppData!\Programs\Python\Python*"
    for /d %%d in (!search_paths!) do (
        if exist "%%d\python.exe" (
            set "py_path=%%d\python.exe"
            goto :validate_python
        )
    )
    echo √ª”–’“µΩPythonΩ‚ Õ∆˜,“™∞≤◊∞¬?
    set /p pyinstall_confirm="ºÃ–¯£ø(Y/n): "
    if /i "!pyinstall_confirm!"=="Y" (
        cls
        echo ’˝‘⁄∞≤◊∞Python...
        winget install --id Python.Python.3.13 -e --accept-package-agreements --accept-source-agreements
        if %errorlevel% neq 0 (
            echo ∞≤◊∞ ß∞‹£¨«Î ÷∂Ø∞≤◊∞Python
            start https://www.python.org/downloads/
            exit /b
        )
        echo ∞≤◊∞ÕÍ≥…£¨’˝‘⁄—È÷§Python...
        goto search_python

    ) else (
        echo »°œ˚∞≤◊∞Python£¨∞¥»Œ“‚º¸ÕÀ≥ˆ...
        pause >nul
        exit /b
    )

    echo ¥ÌŒÛ£∫Œ¥’“µΩø…”√µƒPythonΩ‚ Õ∆˜£°
    exit /b 1

    :validate_python
    "!py_path!" --version >nul 2>&1
    if %errorlevel% neq 0 (
        echo Œﬁ–ßµƒPythonΩ‚ Õ∆˜£∫%py_path%
        exit /b 1
    )

    :: Ã·»°∞≤◊∞ƒø¬º
    for %%i in ("%py_path%") do set "PYTHON_HOME=%%~dpi"
    set "PYTHON_HOME=%PYTHON_HOME:~0,-1%"
)
if not exist "%PYTHON_HOME%\python.exe" (
    echo Python¬∑æ∂—È÷§ ß∞‹£∫%PYTHON_HOME%
    echo «ÎºÏ≤ÈPython∞≤◊∞¬∑æ∂÷– «∑Ò”–python.exeŒƒº˛
    exit /b 1
)
echo ≥…π¶…Ë÷√Python¬∑æ∂£∫%PYTHON_HOME%



:search_git
cls
if exist "%_root%\tools\git\bin" (
    set "GIT_HOME=%_root%\tools\git\bin"
) else (
    echo ’˝‘⁄◊‘∂Ø≤È’“Git...

    where git >nul 2>&1
    if %errorlevel% equ 0 (
        for /f "delims=" %%i in ('where git') do (
            set "git_path=%%i"
            goto :validate_git
        )
    )
    echo ’˝‘⁄…®√Ë≥£º˚∞≤◊∞¬∑æ∂...
    set "search_paths=!ProgramFiles!\Git\cmd"
    for /f "tokens=*" %%d in ("!search_paths!") do (
        if exist "%%d\git.exe" (
            set "git_path=%%d\git.exe"
            goto :validate_git
        )
    )
    echo √ª”–’“µΩGit£¨“™∞≤◊∞¬£ø
    set /p confirm="ºÃ–¯£ø(Y/N): "
    if /i "!confirm!"=="Y" (
        cls
        echo ’˝‘⁄∞≤◊∞Git...
        set "custom_url=https://ghfast.top/https://github.com/git-for-windows/git/releases/download/v2.48.1.windows.1/Git-2.48.1-64-bit.exe"

        set "download_path=%TEMP%\Git-Installer.exe"

        echo ’˝‘⁄œ¬‘ÿGit∞≤◊∞∞¸...
        curl -L -o "!download_path!" "!custom_url!"

        if exist "!download_path!" (
            echo œ¬‘ÿ≥…π¶£¨ø™ º∞≤◊∞Git...
            start /wait "" "!download_path!" /SILENT /NORESTART
        ) else (
            echo œ¬‘ÿ ß∞‹£¨«Î ÷∂Ø∞≤◊∞Git
            start https://git-scm.com/download/win
            exit /b
        )

        del "!download_path!"
        echo ¡Ÿ ±Œƒº˛“—«Â¿Ì°£

        echo ∞≤◊∞ÕÍ≥…£¨’˝‘⁄—È÷§Git...
        where git >nul 2>&1
        if %errorlevel% equ 0 (
            for /f "delims=" %%i in ('where git') do (
                set "git_path=%%i"
                goto :validate_git
            )
            goto :search_git

        ) else (
            echo ∞≤◊∞ÕÍ≥…£¨µ´Œ¥’“µΩGit£¨«Î ÷∂Ø∞≤◊∞Git
            start https://git-scm.com/download/win
            exit /b
        )

    ) else (
        echo »°œ˚∞≤◊∞Git£¨∞¥»Œ“‚º¸ÕÀ≥ˆ...
        pause >nul
        exit /b
    )

    echo ¥ÌŒÛ£∫Œ¥’“µΩø…”√µƒGit£°
    exit /b 1

    :validate_git
    "%git_path%" --version >nul 2>&1
    if %errorlevel% neq 0 (
        echo Œﬁ–ßµƒGit£∫%git_path%
        exit /b 1
    )

    :: Ã·»°∞≤◊∞ƒø¬º
    for %%i in ("%git_path%") do set "GIT_HOME=%%~dpi"
    set "GIT_HOME=%GIT_HOME:~0,-1%"
)

:search_mongodb
cls
sc query | findstr /i "MongoDB" >nul
if !errorlevel! neq 0 (
    echo MongoDB∑˛ŒÒŒ¥‘À––£¨ «∑Ò≥¢ ‘‘À––∑˛ŒÒ£ø
    set /p confirm=" «∑Ò∆Ù∂Ø£ø(Y/N): "
    if /i "!confirm!"=="Y" (
        echo ’˝‘⁄≥¢ ‘∆Ù∂ØMongoDB∑˛ŒÒ...
        powershell -Command "Start-Process -Verb RunAs cmd -ArgumentList '/c net start MongoDB'"
        echo ’˝‘⁄µ»¥˝MongoDB∑˛ŒÒ∆Ù∂Ø...
		echo ∞¥œ¬»Œ“‚º¸Ã¯π˝µ»¥˝...
		timeout /t 30 >nul
        sc query | findstr /i "MongoDB" >nul
        if !errorlevel! neq 0 (
            echo MongoDB∑˛ŒÒ∆Ù∂Ø ß∞‹£¨ø…ƒ‹ «√ª”–∞≤◊∞£¨“™∞≤◊∞¬£ø
            set /p install_confirm="ºÃ–¯∞≤◊∞£ø(Y/N): "
            if /i "!install_confirm!"=="Y" (
                echo ’˝‘⁄∞≤◊∞MongoDB...
                winget install --id MongoDB.Server -e --accept-package-agreements --accept-source-agreements
                echo ∞≤◊∞ÕÍ≥…£¨’˝‘⁄∆Ù∂ØMongoDB∑˛ŒÒ...
                net start MongoDB
                if !errorlevel! neq 0 (
                    echo ∆Ù∂ØMongoDB∑˛ŒÒ ß∞‹£¨«Î ÷∂Ø∆Ù∂Ø
                    exit /b
                ) else (
                    echo MongoDB∑˛ŒÒ“—≥…π¶∆Ù∂Ø
                )
            ) else (
                echo »°œ˚∞≤◊∞MongoDB£¨∞¥»Œ“‚º¸ÕÀ≥ˆ...
                pause >nul
				exit /b
            )
        )
    ) else (
        echo "æØ∏Ê£∫MongoDB∑˛ŒÒŒ¥‘À––£¨Ω´µº÷¬MaiMBotŒﬁ∑®∑√Œ  ˝æ›ø‚£°"
    )
) else (
    echo MongoDB∑˛ŒÒ“—‘À––
)

@REM set "GIT_HOME=%_root%\tools\git\bin"
set "PATH=%PYTHON_HOME%;%GIT_HOME%;%PATH%"

:install_maim
if not exist "!_root!\bot.py" (
    cls
    echo ƒ„À∆∫ı√ª”–∞≤◊∞¬Û¬ÛBot£¨“™∞≤◊∞‘⁄µ±«∞ƒø¬º¬£ø
    set /p confirm="ºÃ–¯£ø(Y/N): "
    if /i "!confirm!"=="Y" (
        echo “™ π”√Git¥˙¿Ìœ¬‘ÿ¬£ø
        set /p proxy_confirm="ºÃ–¯£ø(Y/N): "
        if /i "!proxy_confirm!"=="Y" (
            echo ’˝‘⁄∞≤◊∞¬Û¬ÛBot...
            git clone https://ghfast.top/https://github.com/SengokuCola/MaiMBot
        ) else (
            echo ’˝‘⁄∞≤◊∞¬Û¬ÛBot...
            git clone https://github.com/SengokuCola/MaiMBot
        )
        xcopy /E /H /I MaiMBot . >nul 2>&1
        rmdir /s /q MaiMBot
        git checkout main-fix

        echo ∞≤◊∞ÕÍ≥…£¨’˝‘⁄∞≤◊∞“¿¿µ...
        python -m pip config set global.index-url https://mirrors.aliyun.com/pypi/simple
        python -m pip install virtualenv
        python -m virtualenv venv
        call venv\Scripts\activate.bat
        python -m pip install -r requirements.txt

        echo ∞≤◊∞ÕÍ≥…£¨“™±‡º≠≈‰÷√Œƒº˛¬£ø
        set /p edit_confirm="ºÃ–¯£ø(Y/N): "
        if /i "!edit_confirm!"=="Y" (
            goto config_menu
        ) else (
            echo »°œ˚±‡º≠≈‰÷√Œƒº˛£¨∞¥»Œ“‚º¸∑µªÿ÷˜≤Àµ•...
        )
    )
)


@REM gitªÒ»°µ±«∞∑÷÷ß√˚≤¢±£¥Ê‘⁄±‰¡ø¿Ô
for /f "delims=" %%b in ('git symbolic-ref --short HEAD 2^>nul') do (
    set "BRANCH=%%b"
)

@REM ∏˘æ›≤ªÕ¨∑÷÷ß√˚∏¯∑÷÷ß√˚◊÷∑˚¥Æ π”√≤ªÕ¨—’…´
echo ∑÷÷ß√˚: %BRANCH%
if "!BRANCH!"=="main" (
    set "BRANCH_COLOR=[92m"
) else if "!BRANCH!"=="main-fix" (
    set "BRANCH_COLOR=[91m"
@REM ) else if "%BRANCH%"=="stable-dev" (
@REM     set "BRANCH_COLOR=[96m"
) else (
    set "BRANCH_COLOR=[93m"
)

@REM endlocal & set "BRANCH_COLOR=%BRANCH_COLOR%"

:check_is_venv
echo ’˝‘⁄ºÏ≤È–Èƒ‚ª∑æ≥◊¥Ã¨...
if exist "%_root%\config\no_venv" (
    echo ºÏ≤‚µΩno_venv,Ã¯π˝–Èƒ‚ª∑æ≥ºÏ≤È
    goto menu
)

:: ª∑æ≥ºÏ≤‚
if defined VIRTUAL_ENV (
    goto menu
)

echo =====================================
echo –Èƒ‚ª∑æ≥ºÏ≤‚æØ∏Ê£∫
echo µ±«∞ π”√œµÕ≥Python¬∑æ∂£∫!PYTHON_HOME!
echo Œ¥ºÏ≤‚µΩº§ªÓµƒ–Èƒ‚ª∑æ≥£°

:env_interaction
echo =====================================
echo «Î—°‘Ò≤Ÿ◊˜£∫
echo 1 - ¥¥Ω®≤¢º§ªÓVenv–Èƒ‚ª∑æ≥
echo 2 - ¥¥Ω®/º§ªÓConda–Èƒ‚ª∑æ≥
echo 3 - ¡Ÿ ±Ã¯π˝±æ¥ŒºÏ≤È
echo 4 - ”¿æ√Ã¯π˝–Èƒ‚ª∑æ≥ºÏ≤È
set /p choice="«Î ‰»Î—°œÓ(1-4): "

if "!choice!"=="4" (
	echo “™”¿æ√Ã¯π˝–Èƒ‚ª∑æ≥ºÏ≤È¬£ø
    set /p no_venv_confirm="ºÃ–¯£ø(Y/N): ....."
    if /i "!no_venv_confirm!"=="Y" (
		echo 1 > "%_root%\config\no_venv"
		echo “—¥¥Ω®no_venvŒƒº˛
		pause >nul
		goto menu
	) else (
        echo »°œ˚Ã¯π˝–Èƒ‚ª∑æ≥ºÏ≤È£¨∞¥»Œ“‚º¸∑µªÿ...
        pause >nul
        goto env_interaction
    )
)

if "!choice!"=="3" (
    echo æØ∏Ê£∫ π”√œµÕ≥ª∑æ≥ø…ƒ‹µº÷¬“¿¿µ≥ÂÕª£°
    timeout /t 2 >nul
    goto menu
)

if "!choice!"=="2" goto handle_conda
if "!choice!"=="1" goto handle_venv

echo Œﬁ–ßµƒ ‰»Î£¨«Î ‰»Î1-4÷Æº‰µƒ ˝◊÷
timeout /t 2 >nul
goto env_interaction

:handle_venv
python -m pip config set global.index-url https://mirrors.aliyun.com/pypi/simple
echo ’˝‘⁄≥ı ºªØVenvª∑æ≥...
python -m pip install virtualenv || (
    echo ∞≤◊∞ª∑æ≥ ß∞‹£¨¥ÌŒÛ¬Î£∫!errorlevel!
    pause
    goto env_interaction
)
echo ¥¥Ω®–Èƒ‚ª∑æ≥µΩ£∫venv
    python -m virtualenv venv || (
    echo ª∑æ≥¥¥Ω® ß∞‹£¨¥ÌŒÛ¬Î£∫!errorlevel!
    pause
    goto env_interaction
)

call venv\Scripts\activate.bat
echo “—º§ªÓVenvª∑æ≥
echo “™∞≤◊∞“¿¿µ¬£ø
set /p install_confirm="ºÃ–¯£ø(Y/N): "
if /i "!install_confirm!"=="Y" (
    goto update_dependencies
)
goto menu

:handle_conda
where conda >nul 2>&1 || (
    echo Œ¥ºÏ≤‚µΩconda£¨ø…ƒ‹‘≠“Ú£∫
    echo 1. Œ¥∞≤◊∞Miniconda
    echo 2. conda≈‰÷√“Ï≥£
    timeout /t 10 >nul
    goto env_interaction
)

:conda_menu
echo «Î—°‘ÒConda≤Ÿ◊˜£∫
echo 1 - ¥¥Ω®–¬ª∑æ≥
echo 2 - º§ªÓ“—”–ª∑æ≥
echo 3 - ∑µªÿ…œº∂≤Àµ•
set /p choice="«Î ‰»Î—°œÓ(1-3): "

if "!choice!"=="3" goto env_interaction
if "!choice!"=="2" goto activate_conda
if "!choice!"=="1" goto create_conda

echo Œﬁ–ßµƒ ‰»Î£¨«Î ‰»Î1-3÷Æº‰µƒ ˝◊÷
timeout /t 2 >nul
goto conda_menu

:create_conda
set /p "CONDA_ENV=«Î ‰»Î–¬ª∑æ≥√˚≥∆£∫"
if "!CONDA_ENV!"=="" (
    echo ª∑æ≥√˚≥∆≤ªƒ‹Œ™ø’£°
    goto create_conda
)
conda create -n !CONDA_ENV! python=3.13 -y || (
    echo ª∑æ≥¥¥Ω® ß∞‹£¨¥ÌŒÛ¬Î£∫!errorlevel!
    timeout /t 10 >nul
    goto conda_menu
)
goto activate_conda

:activate_conda
set /p "CONDA_ENV=«Î ‰»Î“™º§ªÓµƒª∑æ≥√˚≥∆£∫"
call conda activate !CONDA_ENV! || (
    echo º§ªÓ ß∞‹£¨ø…ƒ‹‘≠“Ú£∫
    echo 1. ª∑æ≥≤ª¥Ê‘⁄
    echo 2. conda≈‰÷√“Ï≥£
    pause
    goto conda_menu
)
echo ≥…π¶º§ªÓcondaª∑æ≥£∫!CONDA_ENV!
echo “™∞≤◊∞“¿¿µ¬£ø
set /p install_confirm="ºÃ–¯£ø(Y/N): "
if /i "!install_confirm!"=="Y" (
    goto update_dependencies
)
:menu
@chcp 936
cls
echo ¬Û¬ÛBotøÿ÷∆Ã® v%VERSION%  µ±«∞∑÷÷ß: %BRANCH_COLOR%%BRANCH%[0m
echo µ±«∞Pythonª∑æ≥: [96m!PYTHON_HOME![0m
echo ======================
echo 1. ∏¸–¬≤¢∆Ù∂Ø¬Û¬ÛBot (ƒ¨»œ)
echo 2. ÷±Ω”∆Ù∂Ø¬Û¬ÛBot
echo 3. ∆Ù∂Ø¬Û¬Û≈‰÷√ΩÁ√Ê
echo 4. ¥Úø™¬Û¬Û…Ò∆Êπ§æﬂœ‰
echo 5. ÕÀ≥ˆ
echo ======================

set /p choice="«Î ‰»Î—°œÓ ˝◊÷ (1-5)≤¢∞¥œ¬ªÿ≥µ“‘—°‘Ò: "

if "!choice!"=="" set choice=1

if "!choice!"=="1" goto update_and_start
if "!choice!"=="2" goto start_bot
if "!choice!"=="3" goto config_menu
if "!choice!"=="4" goto tools_menu
if "!choice!"=="5" exit /b

echo Œﬁ–ßµƒ ‰»Î£¨«Î ‰»Î1-5÷Æº‰µƒ ˝◊÷
timeout /t 2 >nul
goto menu

:config_menu
@chcp 936
cls
if not exist config/bot_config.toml (
    copy /Y "template\bot_config_template.toml" "config\bot_config.toml"

)
if not exist .env.prod (
    copy /Y "template\.env.prod" ".env.prod"
)

start python webui.py

goto menu


:tools_menu
@chcp 936
cls
echo ¬Û¬Û ±…–π§æﬂœ‰  µ±«∞∑÷÷ß: %BRANCH_COLOR%%BRANCH%[0m
echo ======================
echo 1. ∏¸–¬“¿¿µ
echo 2. «–ªª∑÷÷ß
echo 3. ÷ÿ÷√µ±«∞∑÷÷ß
echo 4. ∏¸–¬≈‰÷√Œƒº˛
echo 5. —ßœ∞–¬µƒ÷™ ∂ø‚
echo 6. ¥Úø™÷™ ∂ø‚Œƒº˛º–
echo 7. ∑µªÿ÷˜≤Àµ•
echo ======================

set /p choice="«Î ‰»Î—°œÓ ˝◊÷: "
if "!choice!"=="1" goto update_dependencies
if "!choice!"=="2" goto switch_branch
if "!choice!"=="3" goto reset_branch
if "!choice!"=="4" goto update_config
if "!choice!"=="5" goto learn_new_knowledge
if "!choice!"=="6" goto open_knowledge_folder
if "!choice!"=="7" goto menu

echo Œﬁ–ßµƒ ‰»Î£¨«Î ‰»Î1-6÷Æº‰µƒ ˝◊÷
timeout /t 2 >nul
goto tools_menu

:update_dependencies
cls
echo ’˝‘⁄∏¸–¬“¿¿µ...
python -m pip config set global.index-url https://mirrors.aliyun.com/pypi/simple
python.exe -m pip install -r requirements.txt

echo “¿¿µ∏¸–¬ÕÍ≥…£¨∞¥»Œ“‚º¸∑µªÿπ§æﬂœ‰≤Àµ•...
pause
goto tools_menu

:switch_branch
cls
echo ’˝‘⁄«–ªª∑÷÷ß...
echo µ±«∞∑÷÷ß: %BRANCH%
@REM echo ø…”√∑÷÷ß: main, debug, stable-dev
echo 1. «–ªªµΩ[92mmain[0m
echo 2. «–ªªµΩ[91mmain-fix[0m
echo «Î ‰»Î“™«–ªªµΩµƒ∑÷÷ß:
set /p branch_name="∑÷÷ß√˚: "
if "%branch_name%"=="" set branch_name=main
if "%branch_name%"=="main" (
    set "BRANCH_COLOR=[92m"
) else if "%branch_name%"=="main-fix" (
    set "BRANCH_COLOR=[91m"
@REM ) else if "%branch_name%"=="stable-dev" (
@REM     set "BRANCH_COLOR=[96m"
) else if "%branch_name%"=="1" (
    set "BRANCH_COLOR=[92m"
    set "branch_name=main"
) else if "%branch_name%"=="2" (
    set "BRANCH_COLOR=[91m"
    set "branch_name=main-fix"
) else (
    echo Œﬁ–ßµƒ∑÷÷ß√˚, «Î÷ÿ–¬ ‰»Î
    timeout /t 2 >nul
    goto switch_branch
)

echo ’˝‘⁄«–ªªµΩ∑÷÷ß %branch_name%...
git checkout %branch_name%
echo ∑÷÷ß«–ªªÕÍ≥…£¨µ±«∞∑÷÷ß: %BRANCH_COLOR%%branch_name%[0m
set "BRANCH=%branch_name%"
echo ∞¥»Œ“‚º¸∑µªÿπ§æﬂœ‰≤Àµ•...
pause >nul
goto tools_menu


:reset_branch
cls
echo ’˝‘⁄÷ÿ÷√µ±«∞∑÷÷ß...
echo µ±«∞∑÷÷ß: !BRANCH!
echo »∑»œ“™÷ÿ÷√µ±«∞∑÷÷ß¬£ø
set /p confirm="ºÃ–¯£ø(Y/N): "
if /i "!confirm!"=="Y" (
    echo ’˝‘⁄÷ÿ÷√µ±«∞∑÷÷ß...
    git reset --hard !BRANCH!
    echo ∑÷÷ß÷ÿ÷√ÕÍ≥…£¨∞¥»Œ“‚º¸∑µªÿπ§æﬂœ‰≤Àµ•...
) else (
    echo »°œ˚÷ÿ÷√µ±«∞∑÷÷ß£¨∞¥»Œ“‚º¸∑µªÿπ§æﬂœ‰≤Àµ•...
)
pause >nul
goto tools_menu


:update_config
cls
echo ’˝‘⁄∏¸–¬≈‰÷√Œƒº˛...
echo «Î»∑±£“—±∏∑›÷ÿ“™ ˝æ›£¨ºÃ–¯Ω´–ﬁ∏ƒµ±«∞≈‰÷√Œƒº˛°£
echo ºÃ–¯«Î∞¥Y£¨»°œ˚«Î∞¥»Œ“‚º¸...
set /p confirm="ºÃ–¯£ø(Y/N): "
if /i "!confirm!"=="Y" (
    echo ’˝‘⁄∏¸–¬≈‰÷√Œƒº˛...
    python.exe config\auto_update.py
    echo ≈‰÷√Œƒº˛∏¸–¬ÕÍ≥…£¨∞¥»Œ“‚º¸∑µªÿπ§æﬂœ‰≤Àµ•...
) else (
    echo »°œ˚∏¸–¬≈‰÷√Œƒº˛£¨∞¥»Œ“‚º¸∑µªÿπ§æﬂœ‰≤Àµ•...
)
pause >nul
goto tools_menu

:learn_new_knowledge
cls
echo ’˝‘⁄—ßœ∞–¬µƒ÷™ ∂ø‚...
echo «Î»∑±£“—±∏∑›÷ÿ“™ ˝æ›£¨ºÃ–¯Ω´–ﬁ∏ƒµ±«∞÷™ ∂ø‚°£
echo ºÃ–¯«Î∞¥Y£¨»°œ˚«Î∞¥»Œ“‚º¸...
set /p confirm="ºÃ–¯£ø(Y/N): "
if /i "!confirm!"=="Y" (
    echo ’˝‘⁄—ßœ∞–¬µƒ÷™ ∂ø‚...
    python.exe src\plugins\zhishi\knowledge_library.py
    echo —ßœ∞ÕÍ≥…£¨∞¥»Œ“‚º¸∑µªÿπ§æﬂœ‰≤Àµ•...
) else (
    echo »°œ˚—ßœ∞–¬µƒ÷™ ∂ø‚£¨∞¥»Œ“‚º¸∑µªÿπ§æﬂœ‰≤Àµ•...
)
pause >nul
goto tools_menu

:open_knowledge_folder
cls
echo ’˝‘⁄¥Úø™÷™ ∂ø‚Œƒº˛º–...
if exist data\raw_info (
    start explorer data\raw_info
) else (
    echo ÷™ ∂ø‚Œƒº˛º–≤ª¥Ê‘⁄£°
    echo ’˝‘⁄¥¥Ω®Œƒº˛º–...
    mkdir data\raw_info
    timeout /t 2 >nul
)
goto tools_menu


:update_and_start
cls
:retry_git_pull
git pull > temp.log 2>&1
findstr /C:"detected dubious ownership" temp.log >nul
if %errorlevel% equ 0 (
    echo ºÏ≤‚µΩ≤÷ø‚»®œﬁŒ Ã‚£¨’˝‘⁄◊‘∂Ø–ﬁ∏¥...
    git config --global --add safe.directory "%cd%"
    echo “—ÃÌº”¿˝Õ‚£¨’˝‘⁄÷ÿ ‘git pull...
    del temp.log
    goto retry_git_pull
)
del temp.log
echo ’˝‘⁄∏¸–¬“¿¿µ...
python -m pip config set global.index-url https://mirrors.aliyun.com/pypi/simple
python -m pip install -r requirements.txt && cls

echo µ±«∞¥˙¿Ì…Ë÷√:
echo HTTP_PROXY=%HTTP_PROXY%
echo HTTPS_PROXY=%HTTPS_PROXY%

echo Disable Proxy...
set HTTP_PROXY=
set HTTPS_PROXY=
set no_proxy=0.0.0.0/32

REM chcp 65001
python bot.py
echo.
echo Bot“—Õ£÷π‘À––£¨∞¥»Œ“‚º¸∑µªÿ÷˜≤Àµ•...
pause >nul
goto menu

:start_bot
cls
echo ’˝‘⁄∏¸–¬“¿¿µ...
python -m pip config set global.index-url https://mirrors.aliyun.com/pypi/simple
python -m pip install -r requirements.txt && cls

echo µ±«∞¥˙¿Ì…Ë÷√:
echo HTTP_PROXY=%HTTP_PROXY%
echo HTTPS_PROXY=%HTTPS_PROXY%

echo Disable Proxy...
set HTTP_PROXY=
set HTTPS_PROXY=
set no_proxy=0.0.0.0/32

REM chcp 65001
python bot.py
echo.
echo Bot“—Õ£÷π‘À––£¨∞¥»Œ“‚º¸∑µªÿ÷˜≤Àµ•...
pause >nul
goto menu


:open_dir
start explorer "%cd%"
goto menu
